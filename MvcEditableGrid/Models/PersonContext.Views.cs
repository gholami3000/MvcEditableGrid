//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(MvcEditableGrid.Models.PersonContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets8333f6a9219126fd7bcfba3d160f8dddb679ddd49201e5af31813fcb47f8d6ac))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets8333f6a9219126fd7bcfba3d160f8dddb679ddd49201e5af31813fcb47f8d6ac : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "8333f6a9219126fd7bcfba3d160f8dddb679ddd49201e5af31813fcb47f8d6ac"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.EditablePerson")
            {
                return GetView0();
            }

            if (extentName == "PersonContext.EditablePerson")
            {
                return GetView1();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.EditablePerson.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EditablePerson
        [CodeFirstDatabaseSchema.EditablePerson](T1.EditablePerson_Id, T1.EditablePerson_Name, T1.EditablePerson_Family, T1.EditablePerson_Age)
    FROM (
        SELECT 
            T.Id AS EditablePerson_Id, 
            T.Name AS EditablePerson_Name, 
            T.Family AS EditablePerson_Family, 
            T.Age AS EditablePerson_Age, 
            True AS _from0
        FROM PersonContext.EditablePerson AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for PersonContext.EditablePerson.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EditablePerson
        [MvcEditableGrid.Models.EditablePerson](T1.EditablePerson_Id, T1.EditablePerson_Name, T1.EditablePerson_Family, T1.EditablePerson_Age)
    FROM (
        SELECT 
            T.Id AS EditablePerson_Id, 
            T.Name AS EditablePerson_Name, 
            T.Family AS EditablePerson_Family, 
            T.Age AS EditablePerson_Age, 
            True AS _from0
        FROM CodeFirstDatabase.EditablePerson AS T
    ) AS T1");
        }
    }
}
